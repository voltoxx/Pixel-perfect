---
interface Props {
    title: string;
    description: string;
    icon: string;
    features?: string[];
}

const { title, description, icon, features = [] } = Astro.props;
---

<div
    class="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 group"
>
    <div class="mb-6">
        <div
            class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white text-2xl mb-4 group-hover:scale-110 transition-transform duration-300"
        >
            {icon}
        </div>
        <h3 class="text-2xl font-bold text-gray-800 mb-3">{title}</h3>
        <p class="text-gray-600 leading-relaxed">{description}</p>
    </div>

    {
        features.length > 0 && (
            <div class="mt-6">
                <h4 class="font-semibold text-gray-800 mb-3">Inclus :</h4>
                <ul class="space-y-2">
                    {features.map((feature) => (
                        <li class="flex items-start space-x-2">
                            <span class="text-green-500 mt-1">âœ“</span>
                            <span class="text-gray-600">{feature}</span>
                        </li>
                    ))}
                </ul>
            </div>
        )
    }

    <div class="mt-8">
        <a
            href="/contact"
            class="inline-flex items-center text-blue-600 hover:text-blue-700 font-semibold transition-colors"
        >
            En savoir plus
            <svg
                class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
            </svg>
        </a>
    </div>
</div>
